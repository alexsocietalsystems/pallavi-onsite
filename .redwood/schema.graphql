"""
Use to check whether or not a user is authenticated and is associated
with an optional set of roles.
"""
directive @requireAuth(roles: [String]) on FIELD_DEFINITION

"""Use to skip authentication checks and allow public access."""
directive @skipAuth on FIELD_DEFINITION

scalar BigInt

type Citation {
  citation_number: String!
  court: Court!
  court_id: Int!
  createdAt: DateTime!
  docket_time: DateTime!
  driver_name: String!
  id: Int!
}

type CitationResponse {
  citation: Citation
  citationExists: Boolean!
}

type Court {
  citations: [Citation]!
  court_name: String!
  createdAt: DateTime!
  id: Int!
  street_address: String!
}

input CreateCitationInput {
  citation_number: String!
  court_id: Int!
  docket_time: DateTime!
  driver_name: String!
}

input CreateCourtInput {
  court_name: String!
  street_address: String!
}

input CreateMessageInput {
  countBefore: Int!
  messageTemplate: String!
  timeUnit: String!
}

input CreateUserInput {
  citation_id: Int!
  email: String!
  name: String!
  phoneNumber: String!
}

scalar Date

scalar DateTime

scalar JSON

scalar JSONObject

type Message {
  countBefore: Int!
  createdAt: DateTime!
  id: Int!
  messageTemplate: String!
  timeUnit: String!
}

type Mutation {
  createCitation(input: CreateCitationInput!): Citation!
  createCourt(input: CreateCourtInput!): Court!
  createMessage(input: CreateMessageInput!): Message!
  createUser(input: CreateUserInput!): User!
  deleteCitation(id: Int!): Citation!
  deleteCourt(id: Int!): Court!
  deleteMessage(id: Int!): Message!
  deleteUser(id: Int!): User!
  updateCitation(id: Int!, input: UpdateCitationInput!): Citation!
  updateCourt(id: Int!, input: UpdateCourtInput!): Court!
  updateMessage(id: Int!, input: UpdateMessageInput!): Message!
  updateUser(id: Int!, input: UpdateUserInput!): User!
}

"""About the Redwood queries."""
type Query {
  citation(id: Int!): Citation
  citations: [Citation!]!
  court(id: Int!): Court
  courts: [Court!]!
  getCitationByNumberAndDriverName(citationNumber: String!, driverName: String!): CitationResponse
  message(id: Int!): Message
  messages: [Message!]!

  """Fetches the Redwood root schema."""
  redwood: Redwood
  user(id: Int!): User
  users: [User!]!
}

"""
The RedwoodJS Root Schema

Defines details about RedwoodJS such as the current user and version information.
"""
type Redwood {
  """The current user."""
  currentUser: JSON

  """The version of Prisma."""
  prismaVersion: String

  """The version of Redwood."""
  version: String
}

scalar Time

input UpdateCitationInput {
  citation_number: String
  court_id: Int
  docket_time: DateTime
  driver_name: String
}

input UpdateCourtInput {
  court_name: String
  street_address: String
}

input UpdateMessageInput {
  countBefore: Int
  messageTemplate: String
  timeUnit: String
}

input UpdateUserInput {
  citation_id: Int
  email: String
  name: String
  phoneNumber: String
}

type User {
  citation: Citation!
  citation_id: Int!
  email: String!
  id: Int!
  name: String!
  phoneNumber: String!
}